;***************************************************
;********   Template-tized simpleusb.conf   ********
;***************************************************
; Note to editors: set tabs to 4 space characters. No wrap to keep comments neat.
; vim: tabstop=4
;
; SimpleUSB channel driver Configuration File
;
; See https://allstarlink.github.io/config/simpleusb_conf/ for full option documentation.
;
;;;;;                 New to ASL3                 ;;;;;
;;;;; The SimpleUSB "tune" settings have moved to ;;;;;
;;;;; this file. The simpleusb_tune_usb_1999.conf ;;;;;
;;;;; file is no longer used.                     ;;;;;

; If you are going to use this channel driver, you MUST enable it in modules.conf
; change:
; noload => chan_simpleusb.so       ; CM1xx USB Cards with Radio Interface Channel Driver (No DSP)
; noload => res_usbradio.so         ; Required for both simpleusb and usbradio
; to:
; load => chan_simpleusb.so         ; CM1xx USB Cards with Radio Interface Channel Driver (No DSP)
; load => res_usbradio.so           ; Required for both simpleusb and usbradio

[general]
;------------------------------ JITTER BUFFER CONFIGURATION --------------------------
; jbenable = yes              ; Enables the use of a jitterbuffer on the receiving side of an
                              ; simpleusb channel. Defaults to "no". An enabled jitterbuffer will
                              ; be used only if the sending side can create and the receiving
                              ; side can not accept jitter. The simpleusb channel can't accept jitter,
                              ; thus an enabled jitterbuffer on the receive simpleusb side will always
                              ; be used if the sending side can create jitter.

; jbmaxsize = 200             ; Max length of the jitterbuffer in milliseconds.

; jbresyncthreshold = 1000    ; Jump in the frame timestamps over which the jitterbuffer is
                              ; resynchronized. Useful to improve the quality of the voice, with
                              ; big jumps in/broken timestamps, usually sent from exotic devices
                              ; and programs. Defaults to 1000.

; jbimpl = fixed              ; Jitterbuffer implementation, used on the receiving side of an simpleusb
                              ; channel. Two implementations are currently available - "fixed"
                              ; (with size always equals to jbmax-size) and "adaptive" (with
                              ; variable size, actually the new jb of IAX2). Defaults to fixed.

; jblog = no                  ; Enables jitterbuffer frame logging. Defaults to "no".
;-----------------------------------------------------------------------------------

[node-main](!)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;; Template for all your SimpleUSB nodes ;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

eeprom = 0                          ; EEPROM installed: 0,1
                                    ; 0 = no (use 0, unless you know your radio interface has an EEPROM)
                                    ; 1 = yes (default)

hdwtype = 0                         ; Leave this set to 0 for USB sound fobs designed for app_rpt
                                    ; or modified cmxxx sound fobs.
                                    ; 1 is for Dingotel/Sph interfaces.
                                    ; 2 is for NHC interfaces.
                                    ; 3 is for a custom interface.

; Receiver parameters
rxboost = no                        ; no = 20db attenuator inserted, yes = 20db attenuator removed
                                    ; Set to yes for additional gain if using a low-level receiver output
                                    ; CM119B devices are hard coded to rxboost 20dB attenuator removed

carrierfrom = usbinvert             ; no,usb,usbinvert
                                    ; no - no carrier detection at all
                                    ; usb - from the COR line on the USB sound fob (Active high)
                                    ; usbinvert - from the inverted COR line on the USB sound fob (Active low)
                                    ; pp - from parallel port (Active high)
                                    ; ppinvert - from the inverted parallel port (Active low)

ctcssfrom = usbinvert               ; no,usb,usbinvert
                                    ; no - CTCSS decoding, system will be carrier squelch
                                    ; usb - CTCSS decoding using input from USB sound fob (Active high)
                                    ; usbinvert - from the inverted CTCSS line on the USB sound fob (Active low)
                                    ; pp - from parallel port (Active high)
                                    ; ppinvert - from the inverted parallel port (Active low)

deemphasis = no                     ; enable de-emphasis (input from discriminator)

plfilter = yes                      ; enable PL filter

rxondelay = 0                       ; Number of 20ms audio frames to delay after the hardware COR goes active, 
                                    ; before the signal is considered valid and COR is asserted to app_rpt. 
                                    ; If txoffdelay is also set (non-zero), then the transmitter has to be off 
                                    ; for txoffdelay AND COR has to be active for rxondelay before COR is 
                                    ; asserted to app_rpt. The default is 0. Use this ONLY on simplex nodes, 
                                    ; to eliminate "Ping Ponging". Leave commented out for repeaters or 
                                    ; other full duplex nodes.

txoffdelay = 0                      ; Number of 20ms audio frames the transmitter has to be un-keyed before a 
                                    ; hardware COR signal is considered valid, and COR is asserted to app_rpt. 
                                    ; If rxondelay is also set (non-zero), then the transmitter has to be off 
                                    ; for txoffdelay AND* COR has to be active for rxondelay before COR is 
                                    ; asserted to app_rpt. The default is 0. Leave commented out for normal 
                                    ; repeaters or other full duplex nodes.
                                    ; This is useful when setting up a half-duplex link with an existing
                                    ; repeater, where you need to ignore the repeater's hangtime.

; Transmitter parameters
invertptt = no                      ; Invert PTT: no,yes
                                    ; no  - ground to transmit
                                    ; yes - open to transmit

preemphasis = no                    ; Perform standard 6db/octave pre-emphasis

; pager = no                        ; no,a,b (e.g. pager = b means "put the normal repeat audio on channel A, and the pager audio on channel B")

; duplex3 = 0                       ; duplex 3 gain setting (0 to disable)

clipledgpio = 1                     ; Enable ADC Clip Detect feature to use a GPIO output (0 to disable).
                                    ; Supports URI Clip LED by setting a GPIO (if available) high for 500mS
                                    ; when clipping detected. Value = GPIO# to use (GPIO1 recommended)

legacyaudioscaling = no             ; If yes, continue to do raw audio sample scaling and clipping, resulting in Tx audio levels increasing
                                    ; by 0.78dB and Rx audio levels increasing by 0-1.5dB. Should be set to no unless you have an existing
                                    ; node with precisely adjusted audio levels and are unable to adjust them. This parameter and associated
                                    ; scaling/clipping code will be deleted once existing installs have been able to verify their audio levels

;;; End of node-main template

#tryinclude "custom/simpleusb.conf"
#tryinclude "custom/simpleusb/*.conf"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;; Configure your nodes here ;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Note: there is no need to duplicate entire settings. Only
;       place settings that are different than the template.
;
; Note: the device string is automatically found when the
;       USB setting "devstr=" is empty.
;
; Note: the interface "tune" settings will be added to the
;       per-node settings (below).

[1999](node-main)

;;;;; ASL3 Tune settings ;;;;;
devstr=
rxmixerset=500
txmixaset=500
txmixbset=500
