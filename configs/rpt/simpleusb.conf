;
; SimpleUSB channel driver Configuration File
;
;;;;;                New to ASL3                        ;;;;;
;;;;; Simple USB tune settings have moved to this file  ;;;;;
;;;;; simpleusb_tune_usb_1999.conf is no longer used.   ;;;;;

; If you are going to use this channel driver, you MUST enable it in modules.conf
; change:
; noload => chan_simpleusb.so       ; CM1xx USB Cards with Radio Interface Channel Driver (No DSP)
; noload => res_usbradio.so         ; Required for both simpleusb and usbradio
; to:
; load => chan_simpleusb.so         ; CM1xx USB Cards with Radio Interface Channel Driver (No DSP)
; load => res_usbradio.so           ; Required for both simpleusb and usbradio

[general]
;------------------------------ JITTER BUFFER CONFIGURATION --------------------------
; jbenable = yes              ; Enables the use of a jitterbuffer on the receiving side of an
							  ; simpleusb channel. Defaults to "no". An enabled jitterbuffer will
							  ; be used only if the sending side can create and the receiving
							  ; side can not accept jitter. The simpleusb channel can't accept jitter,
							  ; thus an enabled jitterbuffer on the receive simpleusb side will always
							  ; be used if the sending side can create jitter.

; jbmaxsize = 200             ; Max length of the jitterbuffer in milliseconds.

; jbresyncthreshold = 1000    ; Jump in the frame timestamps over which the jitterbuffer is
							  ; resynchronized. Useful to improve the quality of the voice, with
							  ; big jumps in/broken timestamps, usualy sent from exotic devices
							  ; and programs. Defaults to 1000.

; jbimpl = fixed              ; Jitterbuffer implementation, used on the receiving side of an simpleusb
							  ; channel. Two implementations are currenlty available - "fixed"
							  ; (with size always equals to jbmax-size) and "adaptive" (with
							  ; variable size, actually the new jb of IAX2). Defaults to fixed.

; jblog = no                  ; Enables jitterbuffer frame logging. Defaults to "no".
;-----------------------------------------------------------------------------------


[1999]

eeprom = 0                          ; EEPROM installed: 0,1
                                    ; 0 = no (default)
                                    ; 1 = yes

hdwtype = 0                         ; Leave this set to 0 for USB sound fobs designed for app_rpt
                                    ; or modified cmxxx sound fobs.
                                    ; 1 is for Dingotel/Sph interfaces.
									; 2 is for NHC interfaces.
									; 3 is for a custom interface.

; Receiver parameters
rxboost = 0                         ; 0 = 20db attenuator inserted, 1= 20db attenuator removed
                                    ; Set to 1 for additonal gain if using a low-level receiver output

carrierfrom = usbinvert             ; no,usb,usbinvert
                                    ; no - no carrier detection at all
                                    ; usb - from the COR line on the USB sound fob (Active high)
                                    ; usbinvert - from the inverted COR line on the USB sound fob (Active low)

ctcssfrom = usbinvert               ; no,usb,usbinvert
                                    ; no - CTCSS decoding, system will be carrier squelch
                                    ; usb - CTCSS decoding using input from USB sound fob (Active high)
                                    ; usbinvert - from the inverted CTCSS line on the USB sound fob (Active low)

deemphasis = no                     ; enable de-emphasis (input from discriminator)

plfilter = yes                      ; enable PL filter

rxondelay = 0               		; Number of 20mSec intervals following the release of PTT.
									; Uncomment and/or adjust for simplex nodes to eliminate "Ping Ponging"
									; or "Relay Racing". A positive value here will instruct the usbradio
									; driver to ignore the COR line for a specified number of 20mSec
									; intervals following the release of PTT. Use this ONLY on simplex
									; nodes, and leave commented out for repeaters or other full duplex nodes.

txoffdelay = 0              		; Ignore the reciever for a specified number of 20 millisecond
									; intervals after the transmitter unkeys.
									; This is useful when setting up a half-duplex link with an existing
									; repeater, where you need to ignore the repeater's hangtime.

; Transmitter parameters
txmixa = voice                      ; Left channel output (A): no,voice
                                    ; no - Do not output anything
                                    ; voice - output voice only

txmixb = no                         ; Right channel output (B): no,voice
                                    ; no - Do not output anything
                                    ; voice - output voice only

invertptt = 0                       ; Invert PTT: 0,1
                                    ; 0 - ground to transmit
                                    ; 1 - open to transmit

preemphasis = 0                     ; Perform standard 6db/octave pre-emphasis

; pager = no                        ; no,a,b (e.g. pager = b means "put the normal repeat audio on channel A, and the pager audio on channel B")

; duplex3 = 0                       ; duplex 3 gain setting (0 to disable)

;;;;; ASL3 Tune settings ;;;;;
; name=1999
; devicenum=1
devstr=
rxmixerset=500
txmixaset=500
txmixbset=500